$date
	Wed Jul  2 10:42:03 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 16 ! bus [15:0] $end
$var reg 1 " clock $end
$var reg 16 # endereco_ext [15:0] $end
$var reg 16 $ iin [15:0] $end
$var reg 1 % mem_wr $end
$var reg 1 & resetn $end
$scope module c $end
$var wire 1 " clock $end
$var wire 16 ' endereco_ext [15:0] $end
$var wire 16 ( mem_in [15:0] $end
$var wire 1 % mem_wr $end
$var wire 1 & resetn $end
$var wire 16 ) iin [15:0] $end
$var wire 16 * endereco_proc [15:0] $end
$var wire 16 + endereco [15:0] $end
$var wire 16 , bus [15:0] $end
$scope module mem $end
$var wire 1 " clock $end
$var wire 16 - data_in [15:0] $end
$var wire 16 . data_out [15:0] $end
$var wire 16 / endereco [15:0] $end
$var wire 1 % wr_enable $end
$upscope $end
$scope module p $end
$var wire 1 " clock $end
$var wire 16 0 iin [15:0] $end
$var wire 1 & resetn $end
$var wire 2 1 saida_contador [1:0] $end
$var wire 8 2 regs_enable [7:0] $end
$var wire 16 3 r7_out [15:0] $end
$var wire 16 4 r6_out [15:0] $end
$var wire 16 5 r5_out [15:0] $end
$var wire 16 6 r4_out [15:0] $end
$var wire 16 7 r3_out [15:0] $end
$var wire 16 8 r2_out [15:0] $end
$var wire 16 9 r1_out [15:0] $end
$var wire 16 : r0_out [15:0] $end
$var wire 1 ; pc_wr_enable $end
$var wire 16 < pc_in [15:0] $end
$var wire 4 = mux_select [3:0] $end
$var wire 1 > imm_wr_enable $end
$var wire 16 ? imm [15:0] $end
$var wire 16 @ endereco [15:0] $end
$var wire 1 A clear $end
$var wire 16 B bus [15:0] $end
$var wire 1 C branch_select $end
$var wire 16 D alu_reg_out [15:0] $end
$var wire 1 E alu_reg_enable $end
$var wire 16 F alu_out [15:0] $end
$var wire 2 G alu_op_select [1:0] $end
$var wire 16 H a_reg_out [15:0] $end
$var wire 1 I a_reg_enable $end
$scope module a $end
$var wire 1 " clock $end
$var wire 1 I wr_enable $end
$var wire 16 J entrada_reg [15:0] $end
$var reg 16 K saida_reg [15:0] $end
$upscope $end
$scope module addr_select $end
$var wire 16 L reg_teste [15:0] $end
$var wire 16 M pc_out [15:0] $end
$var wire 16 N imm [15:0] $end
$var wire 16 O endereco [15:0] $end
$var wire 1 C branch_select $end
$upscope $end
$scope module alu $end
$var wire 16 P A [15:0] $end
$var wire 2 Q op_select [1:0] $end
$var wire 16 R B [15:0] $end
$var reg 16 S r [15:0] $end
$upscope $end
$scope module cont $end
$var wire 1 " clock $end
$var wire 1 A clear $end
$var reg 2 T saida_cont [1:0] $end
$upscope $end
$scope module ext $end
$var wire 1 " clock $end
$var wire 10 U iin [9:0] $end
$var wire 1 > wr_enable $end
$var reg 16 V imediato [15:0] $end
$upscope $end
$scope module log_ctl $end
$var wire 1 I a_reg_enable $end
$var wire 1 E alu_reg_enable $end
$var wire 2 W counter [1:0] $end
$var wire 9 X iin [8:0] $end
$var wire 1 & resetn $end
$var wire 8 Y regs_select [7:0] $end
$var wire 8 Z regs_enable [7:0] $end
$var wire 1 ; pc_wr_enable $end
$var wire 1 > imm_wr_enable $end
$var wire 1 C branch_select $end
$var wire 2 [ alu_op_select [1:0] $end
$var reg 1 A clear $end
$var reg 4 \ mux_select [3:0] $end
$var reg 3 ] opcode [2:0] $end
$var reg 3 ^ rx [2:0] $end
$var reg 3 _ ry [2:0] $end
$scope module dec $end
$var wire 3 ` chave [2:0] $end
$var reg 8 a saida [7:0] $end
$upscope $end
$upscope $end
$scope module mux $end
$var wire 16 b immediate [15:0] $end
$var wire 4 c select [3:0] $end
$var wire 16 d r7 [15:0] $end
$var wire 16 e r6 [15:0] $end
$var wire 16 f r5 [15:0] $end
$var wire 16 g r4 [15:0] $end
$var wire 16 h r3 [15:0] $end
$var wire 16 i r2 [15:0] $end
$var wire 16 j r1 [15:0] $end
$var wire 16 k r0 [15:0] $end
$var wire 16 l r [15:0] $end
$var reg 16 m saida [15:0] $end
$upscope $end
$scope module pc $end
$var wire 1 " clock $end
$var wire 16 n pc_in [15:0] $end
$var wire 1 & resetn $end
$var wire 1 ; wr_enable $end
$var reg 16 o pc_out [15:0] $end
$upscope $end
$scope module r $end
$var wire 1 " clock $end
$var wire 16 p entrada_reg [15:0] $end
$var wire 1 E wr_enable $end
$var reg 16 q saida_reg [15:0] $end
$upscope $end
$scope module r0 $end
$var wire 1 " clock $end
$var wire 16 r entrada_reg [15:0] $end
$var wire 1 s wr_enable $end
$var reg 16 t saida_reg [15:0] $end
$upscope $end
$scope module r1 $end
$var wire 1 " clock $end
$var wire 16 u entrada_reg [15:0] $end
$var wire 1 v wr_enable $end
$var reg 16 w saida_reg [15:0] $end
$upscope $end
$scope module r2 $end
$var wire 1 " clock $end
$var wire 16 x entrada_reg [15:0] $end
$var wire 1 y wr_enable $end
$var reg 16 z saida_reg [15:0] $end
$upscope $end
$scope module r3 $end
$var wire 1 " clock $end
$var wire 16 { entrada_reg [15:0] $end
$var wire 1 | wr_enable $end
$var reg 16 } saida_reg [15:0] $end
$upscope $end
$scope module r4 $end
$var wire 1 " clock $end
$var wire 16 ~ entrada_reg [15:0] $end
$var wire 1 !" wr_enable $end
$var reg 16 "" saida_reg [15:0] $end
$upscope $end
$scope module r5 $end
$var wire 1 " clock $end
$var wire 16 #" entrada_reg [15:0] $end
$var wire 1 $" wr_enable $end
$var reg 16 %" saida_reg [15:0] $end
$upscope $end
$scope module r6 $end
$var wire 1 " clock $end
$var wire 16 &" entrada_reg [15:0] $end
$var wire 1 '" wr_enable $end
$var reg 16 (" saida_reg [15:0] $end
$upscope $end
$scope module r7 $end
$var wire 1 " clock $end
$var wire 16 )" entrada_reg [15:0] $end
$var wire 1 *" wr_enable $end
$var reg 16 +" saida_reg [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx +"
x*"
bx )"
bx ("
x'"
bx &"
bx %"
x$"
bx #"
bx ""
x!"
bx ~
bx }
x|
bx {
bx z
xy
bx x
bx w
xv
bx u
bx t
xs
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
xI
bx H
bx G
bx F
xE
bx D
xC
bx B
xA
bx @
bx ?
x>
bx =
bx <
x;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
b0 /
bx .
b1010001111111101 -
bx ,
b0 +
bx *
bx )
b1010001111111101 (
b0 '
1&
1%
b1010001111111101 $
b0 #
1"
bx !
$end
#1
b1111111101 U
b101000111 X
b1010001111111101 )
b1010001111111101 .
b1010001111111101 0
0"
#2
b1 U
b101001000 X
b1010010000000001 )
b1010010000000001 .
b1010010000000001 0
b1 +
b1 /
1"
b1010010000000001 $
b1010010000000001 (
b1010010000000001 -
b1 #
b1 '
#3
0"
#4
b0 U
b10000000 X
b100000000000000 )
b100000000000000 .
b100000000000000 0
b10 +
b10 /
1"
b100000000000000 $
b100000000000000 (
b100000000000000 -
b10 #
b10 '
#5
0"
#6
b10000000 U
b1 X
b10000000 )
b10000000 .
b10000000 0
b11 +
b11 /
1"
b10000000 $
b10000000 (
b10000000 -
b11 #
b11 '
#7
0"
#8
b0 U
b100000000 X
b1000000000000000 )
b1000000000000000 .
b1000000000000000 0
b100 +
b100 /
1"
b1000000000000000 $
b1000000000000000 (
b1000000000000000 -
b100 #
b100 '
#9
0"
#10
b11000000 X
b110000000000000 )
b110000000000000 .
b110000000000000 0
b101 +
b101 /
1"
b110000000000000 $
b110000000000000 (
b110000000000000 -
b101 #
b101 '
#11
0"
#12
bx U
bx X
bx )
bx .
bx 0
0%
bx +
bx /
1"
b110 #
b110 '
#13
bz !
bz ,
bz B
bz J
bz L
bz R
bz m
bz r
bz u
bz x
bz {
bz ~
bz #"
bz &"
bz )"
b1111 =
b1111 \
b1111 c
0*"
0'"
0$"
0!"
0|
0y
0v
0s
b1111111101 U
b101000111 X
b0 2
b0 Z
b1010001111111101 )
b1010001111111101 .
b1010001111111101 0
0I
0E
b0 +
b0 /
1>
0;
b0 1
b0 T
b0 W
b0 *
b0 @
b0 M
b0 o
0A
0&
0"
#14
bz F
bz S
bz p
b11 G
b11 Q
b11 [
b1 Y
b1 a
b1 <
b1 O
b1 n
b111 _
b0 ^
b0 `
0C
b101 ]
0I
b1111111111111101 ?
b1111111111111101 N
b1111111111111101 V
b1111111111111101 b
0>
b1 1
b1 T
b1 W
1"
b111 #
b111 '
#15
0"
#16
b10 1
b10 T
b10 W
1"
b1000 #
b1000 '
#17
0"
#18
b1111111111111101 !
b1111111111111101 ,
b1111111111111101 B
b1111111111111101 J
b1111111111111101 L
b1111111111111101 R
b1111111111111101 m
b1111111111111101 r
b1111111111111101 u
b1111111111111101 x
b1111111111111101 {
b1111111111111101 ~
b1111111111111101 #"
b1111111111111101 &"
b1111111111111101 )"
b1000 =
b1000 \
b1000 c
1s
b1 2
b1 Z
1;
b11 1
b11 T
b11 W
1"
b1001 #
b1001 '
#19
0"
#20
bz !
bz ,
bz B
bz J
bz L
bz R
bz m
bz r
bz u
bz x
bz {
bz ~
bz #"
bz &"
bz )"
b1111 =
b1111 \
b1111 c
0s
b1 U
b101001000 X
b0 2
b0 Z
b1010010000000001 )
b1010010000000001 .
b1010010000000001 0
b10 <
b10 O
b10 n
b1 +
b1 /
1>
0;
b0 1
b0 T
b0 W
b1 *
b1 @
b1 M
b1 o
b1111111111111101 :
b1111111111111101 k
b1111111111111101 t
1"
b1010 #
b1010 '
#21
0"
#22
b10 Y
b10 a
b0 _
b1 ^
b1 `
b1 ?
b1 N
b1 V
b1 b
0>
b1 1
b1 T
b1 W
1"
b1011 #
b1011 '
#23
0"
#24
b10 1
b10 T
b10 W
1"
b1100 #
b1100 '
#25
0"
#26
b1 !
b1 ,
b1 B
b1 J
b1 L
b1 R
b1 m
b1 r
b1 u
b1 x
b1 {
b1 ~
b1 #"
b1 &"
b1 )"
b1000 =
b1000 \
b1000 c
1v
b10 2
b10 Z
1;
b11 1
b11 T
b11 W
1"
b1101 #
b1101 '
#27
0"
#28
bz !
bz ,
bz B
bz J
bz L
bz R
bz m
bz r
bz u
bz x
bz {
bz ~
bz #"
bz &"
bz )"
b1111 =
b1111 \
b1111 c
0v
b0 U
b10000000 X
b0 2
b0 Z
b100000000000000 )
b100000000000000 .
b100000000000000 0
b11 <
b11 O
b11 n
b10 +
b10 /
1>
0;
b0 1
b0 T
b0 W
b10 *
b10 @
b10 M
b10 o
b1 9
b1 j
b1 w
1"
b1110 #
b1110 '
#29
0"
#30
b1111111111111101 !
b1111111111111101 ,
b1111111111111101 B
b1111111111111101 J
b1111111111111101 L
b1111111111111101 R
b1111111111111101 m
b1111111111111101 r
b1111111111111101 u
b1111111111111101 x
b1111111111111101 {
b1111111111111101 ~
b1111111111111101 #"
b1111111111111101 &"
b1111111111111101 )"
b0 =
b0 \
b0 c
bx1x F
bx1x S
bx1x p
1I
b10 G
b10 Q
b10 [
b1 Y
b1 a
b0 ^
b0 `
b10 ]
b0 ?
b0 N
b0 V
b0 b
0>
b1 1
b1 T
b1 W
1"
b1111 #
b1111 '
#31
0"
#32
0I
1E
b10 F
b10 S
b10 p
b10 1
b10 T
b10 W
b1111111111111101 H
b1111111111111101 K
b1111111111111101 P
1"
b10000 #
b10000 '
#33
0"
#34
b1111111111111111 F
b1111111111111111 S
b1111111111111111 p
b10 !
b10 ,
b10 B
b10 J
b10 L
b10 R
b10 m
b10 r
b10 u
b10 x
b10 {
b10 ~
b10 #"
b10 &"
b10 )"
b1001 =
b1001 \
b1001 c
1s
b1 2
b1 Z
0E
b10 D
b10 l
b10 q
1;
b11 1
b11 T
b11 W
1"
b10001 #
b10001 '
#35
0"
#36
bx1x F
bx1x S
bx1x p
bz !
bz ,
bz B
bz J
bz L
bz R
bz m
bz r
bz u
bz x
bz {
bz ~
bz #"
bz &"
bz )"
b1111 =
b1111 \
b1111 c
0s
b10000000 U
b1 X
b0 2
b0 Z
b10000000 )
b10000000 .
b10000000 0
b100 <
b100 O
b100 n
b11 +
b11 /
1>
0;
b0 1
b0 T
b0 W
b11 *
b11 @
b11 M
b11 o
b10 :
b10 k
b10 t
1"
b10010 #
b10010 '
#37
0"
#38
b10 !
b10 ,
b10 B
b10 J
b10 L
b10 R
b10 m
b10 r
b10 u
b10 x
b10 {
b10 ~
b10 #"
b10 &"
b10 )"
b0 =
b0 \
b0 c
b1111111111111111 F
b1111111111111111 S
b1111111111111111 p
b0 G
b0 Q
b0 [
b1 _
b0 ]
1I
b10000000 ?
b10000000 N
b10000000 V
b10000000 b
0>
b1 1
b1 T
b1 W
1"
b10011 #
b10011 '
#39
0"
#40
b1 !
b1 ,
b1 B
b1 J
b1 L
b1 R
b1 m
b1 r
b1 u
b1 x
b1 {
b1 ~
b1 #"
b1 &"
b1 )"
b1 =
b1 \
b1 c
0I
1E
b11 F
b11 S
b11 p
b10 1
b10 T
b10 W
b10 H
b10 K
b10 P
1"
b10100 #
b10100 '
#41
0"
#42
b101 F
b101 S
b101 p
b11 !
b11 ,
b11 B
b11 J
b11 L
b11 R
b11 m
b11 r
b11 u
b11 x
b11 {
b11 ~
b11 #"
b11 &"
b11 )"
b1001 =
b1001 \
b1001 c
1s
b1 2
b1 Z
0E
b11 D
b11 l
b11 q
1;
b11 1
b11 T
b11 W
1"
b10101 #
b10101 '
#43
0"
#44
bx F
bx S
bx p
bz !
bz ,
bz B
bz J
bz L
bz R
bz m
bz r
bz u
bz x
bz {
bz ~
bz #"
bz &"
bz )"
b1111 =
b1111 \
b1111 c
0s
b0 U
b100000000 X
b0 2
b0 Z
b1000000000000000 )
b1000000000000000 .
b1000000000000000 0
b101 <
b101 O
b101 n
b100 +
b100 /
1>
0;
b0 1
b0 T
b0 W
b100 *
b100 @
b100 M
b100 o
b11 :
b11 k
b11 t
1"
b10110 #
b10110 '
#45
0"
#46
bz F
bz S
bz p
b11 G
b11 Q
b11 [
b0 _
b100 ]
0I
b0 ?
b0 N
b0 V
b0 b
0>
b1 1
b1 T
b1 W
1"
b10111 #
b10111 '
#47
0"
#48
b10 1
b10 T
b10 W
1"
b11000 #
b11000 '
#49
0"
#50
b11 !
b11 ,
b11 B
b11 J
b11 L
b11 R
b11 m
b11 r
b11 u
b11 x
b11 {
b11 ~
b11 #"
b11 &"
b11 )"
b0 =
b0 \
b0 c
1;
b11 1
b11 T
b11 W
1"
b11001 #
b11001 '
#51
0"
#52
bz !
bz ,
bz B
bz J
bz L
bz R
bz m
bz r
bz u
bz x
bz {
bz ~
bz #"
bz &"
bz )"
b1111 =
b1111 \
b1111 c
b11000000 X
b110000000000000 )
b110000000000000 .
b110000000000000 0
b110 <
b110 O
b110 n
b101 +
b101 /
1>
0;
b0 1
b0 T
b0 W
b101 *
b101 @
b101 M
b101 o
1"
b11010 #
b11010 '
#53
0"
#54
b11 ]
0>
b1 1
b1 T
b1 W
1"
b11011 #
b11011 '
